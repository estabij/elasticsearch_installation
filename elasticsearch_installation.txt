1. download elastic search
2. unpack to /usr/share/elasticsearch-<version> and create symlink: ln -s /usr/share/elasticsearch-<version> /usr/share/elasticsearch
3. mv /usr/share/elasticsearch/config /etc/elasticsearch
4. mkdir /var/log/elasticsearch
5. copy the provided startup script to /etc/init.d/elasticsearch
6. start Elastic Search: sudo service elasticsearch start.
To automatically start/stop the service you can also add a symlink to /etc/init.d/elasticsearch in the /etc/rc* directories.
7. check to see if its running: http://localhost:9200/
and open for any host: http://<ipaddress>:9200
check if the /var/run/elasticsearch.pid is there and the logs in /var/log/elasticsearch
8. you can now delete /usr/share/elasticsearch/logs
9. add network.host=127.0.0.1 in /etc/elasticsearch/elasticsearch.yml
10. make sure port 9200/9300 is disallowed for any host. For localhost it is allowed by default.
11. firewall configuration:
ufw disable
ufw status
ufw allow 22
ufw allow 80
ufw enable
ufw status
(enable also port 25, 143, 587 if you use an email server)
12. restart: service elasticsearch restart
13. test to see if Elastic Search still works: http://localhost:9200/.
on http://<ipaddress>:9200 there should now be no connection possible 

14. plugins

a. head:
sudo elasticsearch/bin/plugin -install mobz/elasticsearch-head
open http://localhost:9200/_plugin/head/

b. HQ:
sudo elasticsearch/bin/plugin -install royrusso/elasticsearch-HQ
open http://localhost:9200/_plugin/HQ/

c. marvel:
sudo elasticsearch/bin/plugin -i elasticsearch/marvel/latest
open http://localhost:9200/_plugin/marvel/

15. rivers

jdbc: ( see https://github.com/jprante/elasticsearch-river-jdbc )
sudo elasticsearch/bin/plugin --install jdbc --url http://xbib.org/repository/org/xbib/elasticsearch/plugin/elasticsearch-river-jdbc/1.3.0.4/elasticsearch-river-jdbc-1.3.0.4-plugin.zip

mysql jdbc river:  ( see https://github.com/jprante/elasticsearch-river-jdbc )
curl -o mysql-connector-java-5.1.28.zip -L 'http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.28.zip/from/http://cdn.mysql.com/'

test the mysql river :
create an instance:
curl -XPUT 'localhost:9200/_river/my_jdbc_river/_meta' -d '{
    "type" : "jdbc",
    "jdbc" : {
        "url" : "jdbc:mysql://localhost:3306/test",
        "user" : "",
        "password" : "",
        "sql" : "select * from orders"
    }
}'
test the mysql river:
curl 'localhost:9200/jdbc/_search?pretty&q=*'

and delete that river:
curl -XDELETE 'localhost:9200/_river/my_jdbc_river'

postgresql jdbc river:
download from: http://jdbc.postgresql.org/download.html#current
wget http://jdbc.postgresql.org/download/postgresql-9.3-1102.jdbc41.jar

river-mongodb: ( see https://github.com/richardwilly98/elasticsearch-river-mongodb )
sudo elasticsearch/bin/plugin --install com.github.richardwilly98.elasticsearch/elasticsearch-river-mongodb/2.0.1

you also have to initialise a replica set for the river to work:
1. open /etc/mongod.conf and add:
replSet=rs0
oplogSize=100
2. service mongod restart
3. open mongo shell and type: 
rs.initiate()
restart elastic search again:
sudo service elasticsearch restart
now with tail -f /var/log/elasticsearch/elasticsearch.log you should see no errors
with elastic-search head you can examine the rivers and results.
  
install river "mongodb" with:
curl -XPUT 'http://localhost:9200/_river/mongodb/_meta' -d '{ 
    "type": "mongodb", 
    "mongodb": { 
      "db": "testmongo", 
      "collection": "person"
    }, 
    "index": {
      "name": "mongoindex", 
      "type": "person" 
    }
  }'

Import (test) data from mongo console:
  use testmongo
  var p = {firstName: "John", lastName: "Doe"}
  db.person.save(p)

Query index:
  curl -XGET 'http://localhost:9200/mongoindex/_search?q=firstName:John'

and delete that river:
curl -XDELETE 'localhost:9200/_river/mongodb'

